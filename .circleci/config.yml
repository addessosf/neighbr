version: 2.1
jobs:
  build:
    working_directory: ~/neighbr
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-v1.1-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --include=dev
      - save_cache:
          key: npm-cache-v1.1-{{ checksum "package-lock.json" }}
          paths:
            - /home/circleci/.npm
      - run:
          name: Run Tests
          command: npm run test:ci
      - store_test_results:
          path: .
      - store_artifacts:
          path: coverage

  deploy:
    working_directory: ~/neighbr
    docker:
      -  image: cimg/node:lts
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-v1.1-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: npm-cache-v1.1-{{ checksum "package-lock.json" }}
          paths:
            - /home/circleci/.npm
      - add_ssh_keys:
          fingerprints:
            - "30:2c:ba:e2:ad:f3:c3:bb:77:6b:70:b5:29:84:b1:7c"
      - run:
          name: Install Rsync
          command: |
            sudo apt update
            sudo apt install rsync -y

      - run:
          name: Rsync to instance
          command: |
            rsync -avz -e 'ssh -o StrictHostKeyChecking=no' . ec2-user@neighbr.site:neighbr --filter=':- .gitignore' --exclude=.git
      - run:
          environment:
            SSH_URL: ${CI_USER}@${DEPLOY_HOSTNAME}
          name: Run deploy script
          command: |
            ssh ec2-user@neighbr.site "cd neighbr && bash ./deploy.sh"
workflows:
  version: 2

  build_test_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master